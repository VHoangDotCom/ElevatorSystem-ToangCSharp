@model IEnumerable<ElevatorSystem.Admin.Models.Entity.Elevator>

@{
    ViewBag.Title = "Index";
}
<main id="main" class="main">

    <div class="pagetitle">
        <h1>Category Management</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#">Home</a></li>
                <li class="breadcrumb-item">Elevator</li>
                <li class="breadcrumb-item active">List Elevator</li>
            </ol>
        </nav>
    </div><!-- End Page Title -->
    <section class="section">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        @{
                            if (@TempData["success"] != null)
                            {
                                <div class="alert alert-success alert-dismissible fade show" id="show" role="alert">
                                    <i class="bi bi-check-circle me-1"></i>
                                    <strong>Success !</strong>  @TempData["success"]
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            }
                        }

                        <h5 class="card-title"> Categories List</h5>

                        <div class="card-body">
                            <h5 class="card-title"></h5>
                            <div class="dataTable-top" style="float: right">
                                <button type="button" class="btn btn-success" data-toggle="modal" data-target=".bd-example-modal-lg">Add</button>
                            </div>

                            <!-- Table with stripped rows -->
                            <div>
                                <table class="table datatable">
                                    <thead>
                                        <tr>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Thumbnails)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Name)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.SKU)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.Price)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.CreatedAt)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.UpdatedAt)
                                            </th>
                                            <th>
                                                Action
                                            </th>
                                        </tr>
                                    </thead>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Thumbnails)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Name)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.SKU)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Price)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.CreatedAt)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.UpdatedAt)
                                            </td>
                                            <td>
                                                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                                                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                                                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                                            </td>
                                        </tr>
                                    }
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

</main><!-- End #main -->
<!-- Modal -->
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "createCategory" }))
{
    <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content" style="padding: 50px">
                @*@{Html.RenderAction("Create", "Elevators");}*@
                @Html.Action("Create", "Elevators")
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="document.getElementById('createCategory').submit();">Create</button>
                </div>
            </div>

        </div>
    </div>
}

<script>
    window.onload = function () {

        if ($("#show").hasClass("show")) {
            window.location.reload();
        }
    }

</script>





